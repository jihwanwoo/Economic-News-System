name: ðŸ§ª Test Economic News AI System

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test configuration system
      run: |
        python test_system.py config
    
    - name: Test imports and basic functionality
      run: |
        python -c "
        import sys
        sys.path.append('.')
        
        # Test imports
        from agents.base_agent import BaseAgent, AgentConfig
        from config.settings import load_config
        from streamlit_app.visualization_utils import ChartGenerator, AdGenerator
        
        # Test basic functionality
        config = load_config()
        chart_gen = ChartGenerator()
        ad_gen = AdGenerator()
        
        print('âœ… All imports successful')
        print('âœ… Basic functionality test passed')
        "
    
    - name: Lint with flake8 (optional)
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true
      continue-on-error: true

  dependency-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for security vulnerabilities
      run: |
        pip install safety
        safety check -r requirements.txt || true
      continue-on-error: true
